% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/HELPERS_array_helpers.R
\name{array.access}
\alias{array.access}
\alias{fast.array.access}
\title{Functions for subsetting an array when the number and order of dimensions is not known at the point of coding. The array.access function performs error checking on the arguments; fast.array.access is optimized for speed but does not check arguments}
\usage{
array.access(arr, ..., drop = F)

fast.array.access(arr, dimension.values, drop = F)
}
\arguments{
\item{arr}{The array or matrix to be subsetted. Must have named dimensions and named dimnames set}

\item{drop}{Pass-through for the drop argument for array access. If set to true, any dimensions in the return value that have length one are omitted (as with standard subsetting). If false, then the dimensions are retained in the array}

\item{dimension.values}{A named list containing the values of dimensions to subset for. The names of dimension.values should correspond to the names of dimnames. The elements of dimension.values should be character, integer, or logical vectors}
}
\description{
Flexibly Subset an Array
}
\section{Functions}{
\itemize{
\item \code{fast.array.access()}: 

}}
\examples{
arr = array(1:24, dim=c(age=4, race=3, sex=2),
                 dimnames=list(age=c('age1','age2','age3','age4'),
                               race=c('black','hispanic','other'),
                               sex=c('female','male')))

array.access(arr, dimension.values=list(age=1:3, race='black'))
#is equivalent to
arr[1:3, 'black',]

}
