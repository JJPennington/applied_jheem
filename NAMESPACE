# Generated by roxygen2: do not edit by hand

S3method("$<-",ontology)
S3method("[",ontology)
S3method("[<-",ontology)
S3method("[[<-",ontology)
S3method(as.list,ontology)
S3method(diff,target.populations)
S3method(incomplete.dimensions,ontology)
S3method(is_complete,ontology)
S3method(print,ontology)
export("array.access<-")
export(FUNCTIONAL.FORM)
export(JHEEM.INTERVENTION)
export(STATIC.FUNCTIONAL.FORM)
export(apply.ontology.mapping)
export(array.access)
export(as.ontology)
export(combine.ontology.mappings)
export(create.data.manager)
export(create.intervention)
export(create.intervention.effect)
export(create.jheem.engine)
export(create.jheem.specification)
export(create.linear.functional.form)
export(create.linear.spline.functional.form)
export(create.log.linear.functional.form)
export(create.logistic.linear.functional.form)
export(create.logistic.spline.functional.form)
export(create.logistic.tail.functional.form)
export(create.natural.spline.functional.form)
export(create.ontology.mapping)
export(create.other.catchall.ontology.mapping)
export(create.outcome.metadata)
export(create.static.functional.form)
export(create.target.population)
export(crunch.jheem.engine)
export(expand.array)
export(fast.array.access)
export(get.apply.parameters.to.engine.function)
export(get.apply.projection.parameters.to.engine.function)
export(get.data.outcome.descriptions)
export(get.data.outcome.labels)
export(get.data.outcome.pretty.names)
export(get.data.source.full.names)
export(get.data.source.short.names)
export(get.expand.array.indices)
export(get.identity.ontology.mapping)
export(get.intervention)
export(get.mappings.to.align.ontologies)
export(get.ontology.mapping)
export(get.ontology.mapping.matrix)
export(get.parameter.sampling.blocks.for.version)
export(get.parameters.prior.for.version)
export(get.prior.versions)
export(get.projection.prarameters.distribution.for.version)
export(get.registered.ontology)
export(get.specification.for.version)
export(get.specification.info)
export(incomplete.dimensions)
export(intersect.target.populations)
export(is.no.intervention)
export(is.ontology)
export(is_complete)
export(join.interventions)
export(make.age.strata.names)
export(ontology)
export(parse.age.strata.names)
export(pull.data)
export(put.data)
export(put.data.long.form)
export(register.apply.parameters.to.engine.function)
export(register.data.ontology)
export(register.data.outcome)
export(register.data.source)
export(register.intervention)
export(register.likelihood)
export(register.model.element)
export(register.model.element.values)
export(register.model.quantity)
export(register.model.quantity.subset)
export(register.model.specification)
export(register.ontology.mapping)
export(register.parameter.sampling.blocks)
export(register.parameters.prior)
export(register.projection.parameters.distribution)
export(register.projection.update.components.function)
export(register.top.level.quantity)
export(register.transition)
export(resolve.ontology.dimension.values)
export(run.jheem.engine)
export(set.element.functional.form.alphas.from.parameters)
export(set.element.functional.form.from.time)
export(set.element.functional.form.future.slope)
export(set.element.functional.form.future.slope.after.time)
export(set.element.functional.form.interaction.alphas)
export(set.element.functional.form.main.effect.alphas)
export(set.element.functional.form.to.time)
export(set.element.ramp.times)
export(set.element.ramp.values)
export(set.element.taper.times)
export(set.element.taper.values)
export(set.element.value)
export(set.element.values.from.parameters)
export(standardize.age.strata.names)
export(standardize.race.names)
export(track.quantity)
export(track.transition)
export(union.target.populations)
import(Rcpp)
import(locations)
import(odeintr)
useDynLib(jheem2, .registration = TRUE)
