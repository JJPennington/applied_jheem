% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/JHEEM_engine.R
\name{set.element.ramp.times}
\alias{set.element.ramp.times}
\alias{set.element.ramp.values}
\alias{set.element.taper.times}
\alias{set.element.taper.values}
\title{Set a ramp or taper (times and values) for a model element}
\usage{
set.element.ramp.times(
  model.settings,
  element.name,
  times,
  indices = 1:length(times),
  wrt.version = model.settings$version
)

set.element.ramp.values(
  model.settings,
  element.name,
  values,
  indices = 1:length(values),
  wrt.version = model.settings$version
)

set.element.taper.times(
  model.settings,
  element.name,
  times,
  indices = 1:length(times),
  wrt.version = model.settings$version
)

set.element.taper.values(
  model.settings,
  element.name,
  values,
  indices = 1:length(values),
  wrt.version = model.settings$version
)
}
\arguments{
\item{model.settings}{An object of class 'jheem.model.settings'}

\item{element.name}{The name of the model element to set the ramp/taper for}

\item{times, values}{The times or values to set for the ramp/taper}

\item{indices}{The indices of the ramp/taper to set times or values for. Can be either numeric indices, character indices (if the ramp/taper was named when setting up the specification), or logical indices}

\item{wrt.version}{The version relative to which the element name is resolved (if an element.name is overwritten in a descendant version, using wrt.version can be used to select which specification's model element is to be modified)}
}
\description{
Set a ramp or taper (times and values) for a model element
}
\details{
A ramp is a set of multipliers which are multiplied by the first functional.form value (ie, the value produced at functional.form.from.time) for an element. A taper is a set of multipliers which are multiplied by the last functional.form value (ie, the value produced at functional.form.to.time) for an element
}
\section{Functions}{
\itemize{
\item \code{set.element.ramp.values()}: 

\item \code{set.element.taper.times()}: 

\item \code{set.element.taper.values()}: 

}}
\seealso{
Other Functions to create and modify a model settings: 
\code{\link{set.element.functional.form.from.time}()},
\code{\link{set.element.functional.form.future.slope}()},
\code{\link{set.element.functional.form.interaction.alphas}()}
}
\concept{Functions to create and modify a model settings}
